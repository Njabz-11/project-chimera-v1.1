[tool.poetry]
name = "project-chimera"
version = "1.0.0"
description = "Autonomous Business Operations Platform (ABOP)"
authors = ["Project Chimera Team <team@projectchimera.ai>"]
readme = "README.md"
packages = [{include = "agents"}, {include = "auth"}, {include = "config"}, {include = "database"}, {include = "infrastructure"}, {include = "monitoring"}, {include = "tenants"}, {include = "tools"}, {include = "utils"}, {include = "workers"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "0.104.1"
uvicorn = {extras = ["standard"], version = "0.24.0"}
streamlit = "1.28.1"
playwright = "1.40.0"
beautifulsoup4 = "4.12.2"
pyautogen = "0.9.1a1"

# Core AI Infrastructure - LangChain Ecosystem
langchain = "0.1.0"
langchain-community = "0.0.13"
langchain-core = "0.1.7"
langchain-openai = "0.0.5"
langchain-anthropic = "0.1.1"

# Vector Databases
chromadb = "0.4.18"
lancedb = "0.3.4"

# PostgreSQL Drivers
psycopg2-binary = "2.9.9"
asyncpg = "0.29.0"

# AI/ML Infrastructure
transformers = "4.53.2"
torch = "2.7.1"
sentence-transformers = "5.0.0"
scikit-learn = "1.7.0"
tiktoken = "0.9.0"

# Core Dependencies
python-dotenv = "1.0.0"
google-api-python-client = "2.108.0"
google-auth-oauthlib = "1.1.0"
aiosqlite = "0.19.0"
requests = "2.31.0"
pandas = "2.1.3"
plotly = "5.17.0"
websocket-client = "1.6.4"
rel = "0.4.9"
openai = "1.3.7"
anthropic = "0.7.8"
docker = "6.1.3"

# Enterprise Security Dependencies
python-jose = {extras = ["cryptography"], version = "3.3.0"}
passlib = {extras = ["bcrypt"], version = "1.7.4"}
python-multipart = "0.0.6"
pydantic = {extras = ["email"], version = "2.5.0"}
sqlalchemy = "2.0.23"
alembic = "1.13.1"

# Production Dependencies
loguru = "0.7.2"
gunicorn = "21.2.0"

# Monitoring & Metrics
prometheus-client = "0.19.0"
psutil = "5.9.6"

# Email Validation
email-validator = "2.2.0"

# Celery Task Queue
celery = "5.3.4"
redis = "5.0.1"
kombu = "5.5.4"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.3.0"

[tool.poetry.group.test.dependencies]
httpx = "^0.24.0"
pytest-mock = "^3.11.0"
factory-boy = "^3.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["agents", "auth", "config", "database", "infrastructure", "monitoring", "tenants", "tools", "utils", "workers"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["agents", "auth", "config", "database", "infrastructure", "monitoring", "tenants", "tools", "utils", "workers"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
